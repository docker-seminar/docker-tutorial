#!/bin/bash

# Get the current commit message
commit_msg_file=$1
if [ ! -f "$commit_msg_file" ] || [ ! -r "$commit_msg_file" ]; then
  echo "Error: Cannot read commit message file"
  exit 1
fi
commit_msg=$(cat "$commit_msg_file")

# Get the branch name.
branch_name=$(git symbolic-ref --short HEAD 2>/dev/null)

# Check if branch name follows the pattern [category]/[issue_number]
if [[ $branch_name =~ ^[a-z]+/[0-9]+$ ]]; then
  # Extract issue number from branch name
  issue_number=$(echo "$branch_name" | cut -d '/' -f 2)

  # Check if the commit message already mentions the issue number.
  if ! grep -q "$issue_number" <<< "$commit_msg"; then
    # Add the issue number to the commit message body.
    # Split the commit message into subject and body
    subject=$(head -n 1 "$commit_msg_file")

    # Check if there's a body (more than one line)
    if [ "$(wc -l < "$commit_msg_file")" -gt 1 ]; then
        #Get the body (skipping the first line)
        body=$(tail -n + 2 "$commit_msg_file")
        # Add a reference to the issue at the end of the body
        echo -e "$subject\n$body\n\n#$issue_number" > "$commit_msg_file"
    else
      # No body, so add one with the issue reference
      echo -e "$subject\n\n#$issue_number" > "$commit_msg_file"
    fi
  fi
else
  # Skip if branch name doesn't match the convention
  echo "Branch name does not follow the pattern [category]/[issue_number]. Skip issue number check."
fi

# Determine the repository root
repo_root=$(git rev-parse --show-toplevel)

# Configuration file location
validation_yaml="$repo_root/infra/config/validation.yaml"

# Function to check if a command exists
command_exists() {
  command -v "$1" >/dev/null 2>&1
}

if ! command_exists yq; then
  echo "yq is not installed. Installing..."

  if command_exists brew; then
    brew install yq
  elif command_exists apt; then
    sudo apt update && sudo apt install -y yq
  elif command_exists yum; then
    sudo yum install -y yq
  elif command_exists apk; then
    apk add --no-cache yq
  else
    echo "Error: No compatible package manager found. Please install yq manually."
    exit 1
  fi
fi

echo "yq is installed."

# Extract the first line (title)
commit_title=$(echo "$commit_msg" | head -n 1)
echo "Validating commit title: $commit_title"

# Check if the child script reported an error.
if ! source infra/scripts/conventional-titles/parse-title.sh "$commit_title"; then
  echo "Commit title validation failed:" >&2
  echo "$MESSAGES" >&2
  exit 1

else
  echo "$MESSAGES"
fi